#include "protheus.ch"
#include "topconn.ch"
#include "colors.ch"

#define PAD_LEFT     0
#define PAD_RIGHT    1
#define PAD_CENTER   2
#define PAD_TOP      3
#define PAD_BOTTOM   4
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ LTREL046 ºAutor  ³FSW TOTVS CASCAVEL   º Data ³ 16/09/2021 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Descricao ³ Relatório para impressão de Protocolo de Não Conformidade  ³±±
±±³          ³ Relatório Gráfico utilizando TREPORT.                      ³±±
±±³          ³                                                            ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Resultar                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function LTREL046()

	Local i
	Private oReport
	Private cPerg		:= ""
	Private aTmpFiles	:= {}
	Private nIdioma 	:= 1
    Private _cProt  	:= ZM8->ZM8_IDPROT
    Private _cPesagem   := ZM8->ZM8_NUM
    Private _cProd      := ''
    Private _cPlaca     := ''
    Private _cForn      := ''
    Private _dPesag     := SToD('')

    DbSelectArea("ZM1")
    ZM1->(dbSetOrder(1))
    ZM1->(dbGoTop())
    If !ZM1->(dbSeek(xFilial("ZM1")+_cPesagem))
        MsgAlert("Não foi possível localizar a pesagem " + _cPesagem + " na tabela ZM1.")
        Return
    EndIf

    _cProd := ZM1->ZM1_DESC
    _cPlaca := ZM1->ZM1_PLACA
    _cForn := ZM1->ZM1_NOME
    _dPesag := ZM1->ZM1_DATA

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Define a estrutura do relatório     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oReport := ReportDef()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Carrega a interface do relatório    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oReport:PrintDialog()
	oReport := nil

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Exclui arquivos temporários das imagens           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	For i := 1 to Len(aTmpFiles)
		If File(aTmpFiles[i])
			FErase(aTmpFiles[i])
		Endif
	Next i

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ReportDef ºAutor  ³FSW Totvs Cascavel   º Data ³ 26/09/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para definição e configuração do layout do relatório º±±
±±º          ³chamada antes de mostrar a tela interface.                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FSW Totvs Cascavel                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportDef()

	Local cNomeRel	:= "LTREL046"
	Local cTitulo 	:= "IMPRESSÃO DE PROTOCOLO"
	Local cDescri 	:= "Este relatório tem por objetivo imprimir o Protocolo de Não Conformidade."
	Local aOrdem 		:= {}
	Local oSection1

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Define opções de Ordenação dos registros         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd( aOrdem, "" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria o componente de impressao                                          ³
	//³TReport():New                                                           ³
	//³ExpC1 : Nome do relatorio                                               ³
	//³ExpC2 : Titulo do relatorio                                             ³
	//³ExpC3 : Perguntas SX1                                                   ³
	//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
	//³ExpC5 : Descricao do objetivo do relatorio                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport := TReport():New(cNomeRel,cTitulo,cPerg, {|oReport| ReportPrint(oReport)},cDescri)
	oReport:SetPortrait()			// Define orientação da página modo Retrato
	oReport:HideHeader()				// Oculta a impressão do cabecalho do relatorio
	//oReport:SetPageFooter(1,{|| oReport:Say( oReport:Row(), oReport:Col() + nDesloc,"Pág: "+cValToChar(oReport:Page()), oFntTit3,,,,PAD_LEFT )})				// Oculta a impressão do cabecalho do relatorio
	//oReport:PrintHeader(.F.,.T.)
	oReport:HideFooter()
	oReport:HideParamPage()			// Oculta a impressão da página de parâmetros
	oReport:DisableOrientation()	// Inibe que o usuário altere o formato Retrato/Paisagem
	oReport:oPage:nPaperSize := 9 	// Define o tamanho da página para A4
	oReport:nFontBody := 9			// Ajusta o tamanho da fonte padrão do relatório
	oReport:nLineHeight := 50		// Ajusta a altura da linha de impressão (pixel)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria o objeto de Seção do relatório                                     ³
	//³TRSection():New                                                         ³
	//³ExpO1 : Objeto TReport que a secao pertence                             ³
	//³ExpC2 : Descricao da secao                                              ³
	//³ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela   ³
	//³        sera considerada como principal para a seção.                   ³
	//³ExpA4 : Array com as Ordens do relatório                                ³
	//³ExpL5 : Carrega campos do SX3 como celulas                              ³
	//³        Default : False                                                 ³
	//³ExpL6 : Carrega ordens do Sindex                                        ³
	//³        Default : False                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oSection1 := TRSection():New(oReport,"Protocolo de Não Conformidade",{},aOrdem)

Return(oReport)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ`ÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ReportPrinºAutor  ³FSW Totvs Cascavel   º Data ³ 26/09/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para processamento e controle da impressão do        º±±
±±º          ³relatório, chamada ao confirmar a impressão.                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FSW Totvs Cascavel                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportPrint(oReport)

	Local lRet 		:= .T.
	Local nTotReg 	:= 0	// Total de registros da Query
    Local i

	Private nLargura  	:= 0	// Largura do quadro em Pixel
	Private nAltura   	:= 0	// Altura  do quadro em Pixel
	Private nAltQuadro	:= 50	// Altura padrão dos quadros em Pixel
	Private nDesloc   	:= 150	// Deslocamento horizontal em Pixel
	Private nLinQuebra 	:= 0	// Altura limite para quebrar a página
	Private cBmpLogo  	:= "lgmid01.png"
	Private nLogoW  	:= 220 //110 * 3.5
	Private nLogoH  	:= 220 //110 * 3.5
	Private nBmpWidth 	:= nil
	Private nBmpHeight	:= nil
	Private cAliasTMP 	:= ""
	Private aObsTec   	:= {}

	Private lBold		:= .T.
	Private lItalic	:= .T.
	Private oFntTit1 	:= TFont():New("Verdana"    ,,09,, lBold,,,,,.F. )
	Private oFntTit2 	:= TFont():New("Verdana"    ,,10,, lBold,,,,,.F. )
	Private oFntTit3 	:= TFont():New("Verdana"    ,,12,, lBold,,,,,.F. )
	Private oFntTit4 	:= TFont():New("Verdana"    ,,10,, lBold,,,,,.T. )
	Private oFntTit5 	:= TFont():New("Courier New",,09,, lBold,,,,,.F. )
	Private oFntCel1 	:= TFont():New("Verdana"    ,,09,,!lBold,,,,,.F. )
	Private oFntCel2 	:= TFont():New("Verdana"    ,,10,,!lBold,,,,,.F. )
	Private oFntCel3 	:= TFont():New("Courier New",,10,,!lBold,,,,,.F. )
	Private oFntCel4 	:= TFont():New("Courier New",,09,,!lBold,,,,,.F. )

	Private nCorFundo	:= CLR_HGRAY

	Private oQCabec 	:= nil	// Quadro cabeçalho da página
	Private oQCliente	:= nil	// Quadro dados do Cliente/Prospect
	Private oQCondPag	:= nil	// Quadro dados da Condição Pagamneto
	Private oQCabItem	:= nil	// Quadro cabeçalho do Item
	Private oQCabItemX	:= nil	// Quadro cabeçalho do Item (exportação)
	Private oQDetItem	:= nil	// Quadro dados do Item
	Private oQDetItemX	:= nil	// Quadro dados do Item (exportação)
	Private oQImgItem	:= nil	// Quadro detalhes/imagem do Item
	Private oQTotais	:= nil	// Quadro totais do orçamento
	Private oQTotGer	:= nil	// Quadro totais do orçamento
	Private cTextoTotal:= ""
	Private cValorTotal:= ""

	Private _nPag	:= 1

	
    nTotReg := 20
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Ajusta a régua de processamento do relatório       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	COUNT TO nTotReg
	oReport:SetMeter(nTotReg)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Define altura limite para quebrar a página (pixel) ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nLinQuebra := oReport:PageHeight() - 100

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Define a Largura padrão para os quadros (pixel)    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nLargura := oReport:PageWidth() - 150


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Define o quadro CABEÇALHO                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nAltura := nAltQuadro*5
	oQCabec := FSTRQuadro():New(oReport,nLargura,nAltura)
	oQCabec:SetBorder(.F.)

	oSubQ0  := oQCabec:AddColPerc(6.5)
	oSubQ1  := oQCabec:AddColPerc(13.5)
	oSubQ1:SetBitmap(cBmpLogo,nLogoW,nLogoH)

	oSubQ2  := oQCabec:AddColPerc(72)
	oSubQ2:AddRow(nAltQuadro, {|| AllTrim(Upper(SM0->M0_NOMECOM))                           }, oFntTit3)
	oSubQ2:AddRow(nAltQuadro, {|| "CNPJ: "+ Transform(SM0->M0_CGC,"@R 99.999.999/9999-99")  }, oFntCel2)
	oSubQ2:AddRow(nAltQuadro, {|| "Endereço : "+ UPPER( AllTrim(SM0->M0_ENDCOB) +" "+ Capital(AllTrim(SM0->M0_CIDCOB))+'/'+AllTrim(SM0->M0_ESTCOB)+ "  CEP: "+ AllTrim(Transform(SM0->M0_CEPCOB,"@R 99.999-999")) ) }, oFntCel2)
	oSubQ2:AddRow(nAltQuadro, {|| "Telefone: "+AllTrim(Transform(StrTran(SM0->M0_TEL,'-',''),"@R (99) 9999-9999")) }, oFntCel2)
	oSubQ2:AddRow(nAltQuadro, {|| "www.tresbarras.ind.br" }, oFntCel2)

	oSubQ3  := oQCabec:AddColPerc(8)
	oSubQ3:AddRow(nAltQuadro, {|| "Pág: " + cvaltochar(oReport:Page()) }, oFntCel2,PAD_RIGHT)

	nAltura := nAltQuadro
	oQProt := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQProt:SetBorder(.F.)
	oSubQ1  := oQProt:AddColPerc(100)
	oSubQ1:AddRow(nAltQuadro,{|| "PLANO DE AÇÃO - NÃO CONFORMIDADE RECEBIMENTO MATÉRIA PRIMA"   },oFntTit3,PAD_CENTER)


    // Quadro Análise do Laboratório
    nAltura := nAltQuadro*1.3
    oQCabLab := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQCabLab:SetBorder(.T.)
    oQCabLab:SetShadow(.T.)
    oObs1  := oQCabLab:AddRow(nAltQuadro*1.3,,,PAD_CENTER)
	oObs1:AddColPerc(100, {|| 'ANÁLISE LABORATÓRIO' }, oFntTit2,,/* CLR_HGRAY */)
    //oObs1:SetBackColor(CLR_HGRAY)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Define o quadro Cabeçalho das Despesas             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nAltura := nAltQuadro*5 // Movimento por Produtor tem uma linha a mais
	oQLab := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQLab:SetBorder(.F.)
    
	
	oObs1  := oQLab:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs1:AddColPerc(15, {|| 'Nº Protocolo: ' }, oFntTit2)
	oObs1:AddColPerc(18, {||  _cProt  }, oFntCel2)
	oObs1:AddColPerc(15, {|| 'Nº Pesagem:'  }, oFntTit2)
	oObs1:AddColPerc(35, {|| _cPesagem }, oFntCel2)
	//oObs1:SetBackColor(CLR_HGRAY)

    oObs2  := oQLab:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs2:AddColPerc(15, {|| 'Data Pesagem:' }, oFntTit2)
	oObs2:AddColPerc(18, {|| dToC(_dPesag) }, oFntCel2)
	oObs2:AddColPerc(18, {|| 'Data Abertura RNC:' }, oFntTit2)
	oObs2:AddColPerc(15, {|| dToC(ZM8->ZM8_DTQLD) }, oFntCel2)
	oObs2:AddColPerc(18, {|| 'Prazo Resposta:' }, oFntTit2)
	oObs2:AddColPerc(15, {|| '' }, oFntCel2)

	oObs3  := oQLab:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs3:AddColPerc(15, {|| 'Matéria Prima: ' }, oFntTit2)
    oObs3:AddColPerc(85, {|| AllTrim(_cProd) }, oFntCel2)

    oObs4  := oQLab:AddRow(nAltQuadro,,,PAD_LEFT)
    If ZM8->ZM8_TPMOV == 'F'
        oObs4:AddColPerc(15, {|| 'Fornecedor: ' }, oFntTit2)
        oObs4:AddColPerc(50, {|| AllTrim(_cForn) }, oFntCel2)
        oObs4:AddColPerc(15, {|| 'Placa: ' }, oFntTit2)
        oObs4:AddColPerc(20, {|| AllTrim(_cPlaca) }, oFntCel2)
    Else
        oObs4:AddColPerc(15, {|| 'Placa: ' }, oFntTit2)
        oObs4:AddColPerc(20, {|| AllTrim(_cPlaca) }, oFntCel2)
    EndIf

    oObs5  := oQLab:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs5:AddColPerc(100, {|| 'Descrição Resumida do Problema: ' }, oFntTit2)
    // Fim Quadro Análise do Laboratório

    
    // Quadro Análise do Fornecedor ou Análise da Captação
    nAltura := nAltQuadro*1.3
    oQCabFor := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQCabFor:SetBorder(.T.)
    oQCabFor:SetShadow(.T.)
    oObs1  := oQCabFor:AddRow(nAltQuadro*1.3,,,PAD_CENTER)
	oObs1:AddColPerc(100, {|| 'ANÁLISE ' + IIF(ZM8->ZM8_TPMOV=='F','FORNECEDOR','CAPTAÇÃO') }, oFntTit2,,/* CLR_HGRAY */)


    nAltura := nAltQuadro*IIF(ZM8->ZM8_TPMOV=='F',2,3) // MOVIMENTO POR PRODUTOR TEM UMA LINHA A MAIS
    oQFor := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQFor:SetBorder(.F.)    
	
    If ZM8->ZM8_TPMOV=='P'
        oObs0  := oQFor:AddRow(nAltQuadro,,,PAD_LEFT)
        oObs0:AddColPerc(15, {|| 'Produtor: ' }, oFntTit2)
        oObs0:AddColPerc(50, {||  AllTrim(ZM9->ZM9_NOME)  }, oFntCel2)
    EndIf

	oObs1  := oQFor:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs1:AddColPerc(15, {|| 'Análise: ' }, oFntTit2)
	oObs1:AddColPerc(18, {||  AllTrim(ZM9->ZM9_DESCR)  }, oFntCel2)
	oObs1:AddColPerc(15, {|| 'Tanque:'  }, oFntTit2)
	oObs1:AddColPerc(18, {|| ZM9->ZM9_TANQUE }, oFntCel2)
	oObs1:AddColPerc(15, {|| 'Relação:' }, oFntTit2)
	oObs1:AddColPerc(18, {|| _cRelacao }, oFntCel2)
	//oObs1:SetBackColor(CLR_HGRAY)

    oObs2  := oQFor:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs2:AddColPerc(15, {|| 'Responsável:' }, oFntTit2)
	oObs2:AddColPerc(18, {|| ZM9->ZM9_RESP }, oFntCel2)
	oObs2:AddColPerc(15, {|| 'Data:' }, oFntTit2)
	oObs2:AddColPerc(18, {|| dToC(ZM9->ZM9_DTINVE) }, oFntCel2)
    oObs2:AddColPerc(15, {|| 'Prazo Implement.:' }, oFntTit2)
	oObs2:AddColPerc(18, {|| dToC(ZM9->ZM9_PRAZO) }, oFntCel2)
	// FIM Quadro Análise do Fornecedor ou Análise da Captação



    // Quadro Análise da Qualidade
    nAltura := nAltQuadro*1.3
    oQCabQld := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQCabQld:SetBorder(.T.)
    oQCabQld:SetShadow(.T.)
    oObs1  := oQCabQld:AddRow(nAltQuadro*1.3,,,PAD_CENTER)
	oObs1:AddColPerc(100, {|| 'ANÁLISE QUALIDADE'}, oFntTit2,,/* CLR_HGRAY */)


    nAltura := nAltQuadro // MOVIMENTO POR PRODUTOR TEM UMA LINHA A MAIS
    oQQld := FSTRQuadro():New(oReport,nLargura-nDesloc,nAltura)
	oQQld:SetBorder(.F.)    
	

	oObs1  := oQQld:AddRow(nAltQuadro,,,PAD_LEFT)
	oObs1:AddColPerc(15, {|| 'Avaliação RNC: ' }, oFntTit2)
	oObs1:AddColPerc(18, {||  IIF(EMPTY(ZM8->ZM8_AVAL),"Não Realizada",IIF(ZM8->ZM8_AVAL=="A","Aceita","Não Aceita"))  }, oFntCel2)
	oObs1:AddColPerc(15, {|| 'Data Avaliação:'  }, oFntTit2)
	oObs1:AddColPerc(18, {|| ZM8->ZM8_DTAVAL }, oFntCel2)
	oObs1:AddColPerc(23, {|| 'Dt. RNC Devolv. Captação:' }, oFntTit2)
	oObs1:AddColPerc(10, {|| ZM8->ZM8_DTAVAL }, oFntCel2)
    
    // Fim Quadro Análise da Qualidade

    /*  */
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Processa a impressão do relatório          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trata campo memo com quebra de linha           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cImpOpcPag := ""
	nTamLin := 100	// Tamanho da linha descrição em caracteres

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Inicializa Página e imprime cabeçalho      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	fStartPage(oReport)

    oQProt:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQProt:nHeight)
	
	oReport:Line( oReport:Row(), oReport:Col() + nDesloc, oReport:Row(), nLargura )
	oReport:IncRow()

    oQCabLab:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQCabLab:nHeight*1.5)

    oQLab:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQLab:nHeight)

    nTamLin := 125	// Tamanho da linha descrição em caracteres
    aDesc := QuebraLin(Alltrim(ZM8->ZM8_DESCR), nTamLin)
    For i := 1 to Len(aDesc)
        If oReport:Row() > nLinQuebra - 150
            oReport:EndPage(.T.)
            fStartPage(oReport)
            nLinFIM := oReport:Row()
        Endif
        oReport:Say( oReport:Row(), oReport:Col() + nDesloc, Alltrim(aDesc[i]), oFntCel3,,,,PAD_LEFT )
        oReport:IncRow()
    Next i
    aDesc := nil

	
	//oReport:Line( oReport:Row(), oReport:Col() + nDesloc, oReport:Row(), nLargura )
	oReport:IncRow()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Imprime Quadro da Assinatura                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If oReport:Row() > nLinQuebra - 150
		oReport:EndPage(.T.)
		fStartPage(oReport)
		nLinFIM := oReport:Row()
	Endif

    oQCabFor:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQCabFor:nHeight*1.5)

    __nQtdReg := 0

    DbSelectArea("ZM9")
    ZM9->(dbSetOrder(1))
    ZM9->(dbGoTop())
    ZM9->(dbSeek(xFilial('ZM9')+_cPesagem))
    While !ZM9->(EOF()) .AND. ZM9->(ZM9_FILIAL+ZM9_NUM) == xFilial('ZM9')+_cPesagem
        __nQtdReg++    
        If ZM9->ZM9_RELAC == '1'
            _cRelacao:= 'Máquina'
        ElseIf ZM9->ZM9_RELAC == '2'
            _cRelacao := 'Mão-de-Obra'
        ElseIf ZM9->ZM9_RELAC == '3'
            _cRelacao:= 'Método'
        ElseIf ZM9->ZM9_RELAC == '4'
            _cRelacao:= 'Material '
        EndIf

        If __nQtdReg > 1
            oReport:IncRow()
            oReport:Line( oReport:Row(), oReport:Col() + nDesloc, oReport:Row(), nLargura )
            oReport:IncRow()
        EndIf

        oQFor:Print( oReport:Row(), oReport:Col() + nDesloc )
        oReport:IncRow(oQFor:nHeight)
        
        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
        //³ Imprime Quadro da Assinatura                   ³
        //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If oReport:Row() > nLinQuebra - 150
            oReport:EndPage(.T.)
            fStartPage(oReport)
            nLinFIM := oReport:Row()
        Endif

        oReport:Say( oReport:Row(), oReport:Col() + nDesloc, "Motivo:", oFntTit2,,,,PAD_LEFT )
        oReport:IncRow()
        nTamLin := 125	// Tamanho da linha descrição em caracteres
        aDesc := QuebraLin(Alltrim(ZM9->ZM9_MOTIVO), nTamLin)
        For i := 1 to Len(aDesc)
            If oReport:Row() > nLinQuebra - 150
                oReport:EndPage(.T.)
                fStartPage(oReport)
                nLinFIM := oReport:Row()
            Endif
            oReport:Say( oReport:Row(), oReport:Col() + nDesloc, Alltrim(aDesc[i]), oFntCel3,,,,PAD_LEFT )
            oReport:IncRow()
        Next i
        aDesc := nil
        oReport:IncRow()

        oReport:Say( oReport:Row(), oReport:Col() + nDesloc, "Causa Raiz:", oFntTit2,,,,PAD_LEFT )
        oReport:IncRow()
        nTamLin := 125	// Tamanho da linha descrição em caracteres
        aDesc := QuebraLin(Alltrim(ZM9->ZM9_CAUSA), nTamLin)
        For i := 1 to Len(aDesc)
            If oReport:Row() > nLinQuebra - 150
                oReport:EndPage(.T.)
                fStartPage(oReport)
                nLinFIM := oReport:Row()
            Endif
            oReport:Say( oReport:Row(), oReport:Col() + nDesloc, Alltrim(aDesc[i]), oFntCel3,,,,PAD_LEFT )
            oReport:IncRow()
        Next i
        aDesc := nil
        oReport:IncRow()

        oReport:Say( oReport:Row(), oReport:Col() + nDesloc, "Ações Corretivas:", oFntTit2,,,,PAD_LEFT )
        oReport:IncRow()
        nTamLin := 125	// Tamanho da linha descrição em caracteres
        aDesc := QuebraLin(Alltrim(ZM9->ZM9_ACOES), nTamLin)
        For i := 1 to Len(aDesc)
            If oReport:Row() > nLinQuebra - 150
                oReport:EndPage(.T.)
                fStartPage(oReport)
                nLinFIM := oReport:Row()
            Endif
            oReport:Say( oReport:Row(), oReport:Col() + nDesloc, Alltrim(aDesc[i]), oFntCel3,,,,PAD_LEFT )
            oReport:IncRow()
        Next i
        aDesc := nil
        ZM9->(dbSkip())
    EndDo

    oReport:IncRow()

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ Imprime Quadro da Assinatura                   ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If oReport:Row() > nLinQuebra - 150
        oReport:EndPage(.T.)
        fStartPage(oReport)
        nLinFIM := oReport:Row()
    Endif

    oQCabQld:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQCabQld:nHeight*1.5)
    
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ Imprime Quadro da Assinatura                   ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If oReport:Row() > nLinQuebra - 150
        oReport:EndPage(.T.)
        fStartPage(oReport)
        nLinFIM := oReport:Row()
    Endif
    
    oQQld:Print( oReport:Row(), oReport:Col() + nDesloc )
    oReport:IncRow(oQQld:nHeight)

    If ZM8->ZM8_AVAL == 'N'
        oReport:Say( oReport:Row(), oReport:Col() + nDesloc, "Motivo não aceite:", oFntTit2,,,,PAD_LEFT )
        oReport:IncRow()
        
        nTamLin := 125	// Tamanho da linha descrição em caracteres
        aDesc := QuebraLin(Alltrim(ZM8->ZM8_MOTNAO), nTamLin)
        For i := 1 to Len(aDesc)
            If oReport:Row() > nLinQuebra - 150
                oReport:EndPage(.T.)
                fStartPage(oReport)
                nLinFIM := oReport:Row()
            Endif
            oReport:Say( oReport:Row(), oReport:Col() + nDesloc, Alltrim(aDesc[i]), oFntCel3,,,,PAD_LEFT )
            oReport:IncRow()
        Next i
        aDesc := nil
    EndIf



	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Libera memória dos objetos criados                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	FreeObj(oQCabec)
	FreeObj(oQProt)


	oQCabec    	:= nil
	oQCliente  	:= nil
	oQProt  		:= nil
	oQProt2		:= nil
	oQProt3		:= nil
	oQProt4		:= nil

Return(lRet)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fStartPageºAutor  ³Totvs Cascavel       º Data ³ 04/10/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para iniciar posicionamento a cada nova página e     º±±
±±º          ³imprimir imagem de fundo estilo marca d'água.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Totvs Cascavel                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fStartPage(oReport)

    oReport:PrintText("")

	oQCabec:Print( oReport:Row(), oReport:Col() )
	oReport:IncRow(oQCabec:nHeight)
	oReport:IncRow()
	oReport:Line( oReport:Row(), oReport:Col() + nDesloc, oReport:Row(), nLargura )


Return




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ QuebraLinºAutor ³ TOTVS Cascavel      º Data ³  02/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Recebe uma variavel de Texto e retorna um Array contendo   º±±
±±º          ³ as linhas quebradas conforme a quantidade limite de        º±±
±±º          ³ caracteres por linha passada. Efetua Quebra de Palavras.   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Geral                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDATA      ³ ANALISTA ³  MOTIVO                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³          ³                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function QuebraLin(cTexto,nTamLin)

Local nTabSize	:= 3
Local lWrap		:= .T.
Local nLines		:= 0
Local cAux 		:= ""
Local aRet 		:= {}
Local nCurrentLine := 0

cTexto := AllTrim(ConvMemo(cTexto))
nLines := MLCOUNT(cTexto, nTamLin)

For nCurrentLine := 1 to nLines
	cAux := MEMOLINE(cTexto, nTamLin, nCurrentLine)
	aAdd(aRet, cAux)
Next

Return(aRet)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ConvMemo  ºAutor  ³Totvs Cascavel       º Data ³ 04/10/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para converter caracteres de final de linha de um    º±±
±±º          ³campo texto, conforme codificação UNIX (LF) / DOS (CRLF)    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Totvs Cascavel                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ConvMemo(cMemo)

// Verifica se o texto origem possui uma sequencia caracter CRLF
// Se tiver já está correto, senão converte o texto
If At(chr(13)+chr(10), cMemo) == 0
	cMemo := StrTran(cMemo, chr(10), chr(13)+chr(10))
Endif

Return(cMemo)

